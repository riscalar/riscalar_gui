// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.22.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'components/cache.dart';
import 'components/functional_unit_pool.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'latency_args.freezed.dart';

@freezed
class CacheConfig with _$CacheConfig {
  const factory CacheConfig({
    required CacheOptions il1,
    required CacheOptions dl1,
    required CacheOptions il2,
    required CacheOptions dl2,
  }) = _CacheConfig;
}

@freezed
class CommitConfig with _$CommitConfig {
  const factory CommitConfig({
    int? commitWidth,
  }) = _CommitConfig;
}

@freezed
class DecodeConfig with _$DecodeConfig {
  const factory DecodeConfig({
    int? decodeWidth,
  }) = _DecodeConfig;
}

@freezed
class FetchConfig with _$FetchConfig {
  const factory FetchConfig({
    int? fetchQueueSize,
    int? fetchSpeed,
    int? fetchBranchPenalty,
  }) = _FetchConfig;
}

@freezed
class FunctionalUnitPoolConfig with _$FunctionalUnitPoolConfig {
  const factory FunctionalUnitPoolConfig({
    required FunctionalUnitGroupCfg ialu,
    required FunctionalUnitGroupCfg imult,
    required FunctionalUnitGroupCfg idiv,
    required FunctionalUnitGroupCfg load,
    required FunctionalUnitGroupCfg store,
  }) = _FunctionalUnitPoolConfig;
}

@freezed
class IssueConfig with _$IssueConfig {
  const factory IssueConfig({
    int? issueWidth,
    required IssueOrder issueOrder,
    required bool issueNoMisspec,
  }) = _IssueConfig;
}

enum IssueOrder {
  /// Earlier instructions must have been issued before later instructions
  inOrder,

  /// Allow instructions that have satisfied dependencies to be issued before earlier instructions
  outOrder,
}

@freezed
class LatencyArgs with _$LatencyArgs {
  const factory LatencyArgs({
    required String binaryPath,
    int? rsqSize,
    int? lsqSize,
    required RunConfig runConfig,
    required FetchConfig fetchConfig,
    required DecodeConfig decodeConfig,
    required IssueConfig issueConfig,
    required CommitConfig commitConfig,
    required FunctionalUnitPoolConfig functionalUnitPoolConfig,
    required MemoryConfig memoryConfig,
    required CacheConfig cacheConfig,
  }) = _LatencyArgs;
}

@freezed
class MemoryConfig with _$MemoryConfig {
  const factory MemoryConfig({
    required int memoryBusWidth,
    Uint64List? memoryLatency,
  }) = _MemoryConfig;
}

@freezed
class RunConfig with _$RunConfig {
  const factory RunConfig({
    int? fastForward,
    int? maxInstrs,
    Uint64List? statInterval,
    int? statFreq,
  }) = _RunConfig;
}
