// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.22.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../cpu/latency_core/components/cache.dart';
import '../cpu/latency_core/components/functional_unit_pool.dart';
import '../cpu/latency_core/latency_args.dart';
import '../cpu/register.dart';
import '../frb_generated.dart';
import 'package:collection/collection.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'simple.freezed.dart';

Future<SimulationResult> runSimulationFunctional(
        {required String binaryPath, dynamic hint}) =>
    RustLib.instance.api
        .runSimulationFunctional(binaryPath: binaryPath, hint: hint);

Future<SimulationResult> runSimulationLatency(
        {required LatencyArgs args, dynamic hint}) =>
    RustLib.instance.api.runSimulationLatency(args: args, hint: hint);

@freezed
sealed class SimulationResult with _$SimulationResult {
  const factory SimulationResult.success(
    XRegisterFile field0,
    String field1,
    String field2,
  ) = SimulationResult_Success;
  const factory SimulationResult.error(
    String field0,
    String field1,
  ) = SimulationResult_Error;
}

class U64Array32 extends NonGrowableListView<BigInt> {
  static const arraySize = 32;

  @internal
  Uint64List get inner => _inner;
  final Uint64List _inner;

  U64Array32(this._inner)
      : assert(_inner.length == arraySize),
        super(_inner);

  U64Array32.init() : this(Uint64List(arraySize));
}
