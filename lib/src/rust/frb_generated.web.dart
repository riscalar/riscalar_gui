// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.22.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api/simple.dart';
import 'cpu/latency_core/components/cache.dart';
import 'cpu/latency_core/components/functional_unit_pool.dart';
import 'cpu/latency_core/latency_args.dart';
import 'cpu/register.dart';
import 'dart:async';
import 'dart:convert';
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_web.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  BlockReplacement dco_decode_block_replacement(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  LatencyArgs dco_decode_box_autoadd_latency_args(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_16(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_64(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_8(dynamic raw);

  @protected
  XRegisterFile dco_decode_box_autoadd_x_register_file(dynamic raw);

  @protected
  CacheConfig dco_decode_cache_config(dynamic raw);

  @protected
  CacheOptions dco_decode_cache_options(dynamic raw);

  @protected
  CommitConfig dco_decode_commit_config(dynamic raw);

  @protected
  DecodeConfig dco_decode_decode_config(dynamic raw);

  @protected
  FetchConfig dco_decode_fetch_config(dynamic raw);

  @protected
  FunctionalUnitGroupCfg dco_decode_functional_unit_group_cfg(dynamic raw);

  @protected
  FunctionalUnitPoolConfig dco_decode_functional_unit_pool_config(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  IssueConfig dco_decode_issue_config(dynamic raw);

  @protected
  IssueOrder dco_decode_issue_order(dynamic raw);

  @protected
  LatencyArgs dco_decode_latency_args(dynamic raw);

  @protected
  Uint64List dco_decode_list_prim_u_64_strict(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  MemoryConfig dco_decode_memory_config(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_16(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_8(dynamic raw);

  @protected
  Uint64List? dco_decode_opt_list_prim_u_64_strict(dynamic raw);

  @protected
  RunConfig dco_decode_run_config(dynamic raw);

  @protected
  SimulationResult dco_decode_simulation_result(dynamic raw);

  @protected
  int dco_decode_u_16(dynamic raw);

  @protected
  int dco_decode_u_64(dynamic raw);

  @protected
  U64Array32 dco_decode_u_64_array_32(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  int dco_decode_usize(dynamic raw);

  @protected
  XRegisterFile dco_decode_x_register_file(dynamic raw);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  BlockReplacement sse_decode_block_replacement(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  LatencyArgs sse_decode_box_autoadd_latency_args(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_8(SseDeserializer deserializer);

  @protected
  XRegisterFile sse_decode_box_autoadd_x_register_file(
      SseDeserializer deserializer);

  @protected
  CacheConfig sse_decode_cache_config(SseDeserializer deserializer);

  @protected
  CacheOptions sse_decode_cache_options(SseDeserializer deserializer);

  @protected
  CommitConfig sse_decode_commit_config(SseDeserializer deserializer);

  @protected
  DecodeConfig sse_decode_decode_config(SseDeserializer deserializer);

  @protected
  FetchConfig sse_decode_fetch_config(SseDeserializer deserializer);

  @protected
  FunctionalUnitGroupCfg sse_decode_functional_unit_group_cfg(
      SseDeserializer deserializer);

  @protected
  FunctionalUnitPoolConfig sse_decode_functional_unit_pool_config(
      SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  IssueConfig sse_decode_issue_config(SseDeserializer deserializer);

  @protected
  IssueOrder sse_decode_issue_order(SseDeserializer deserializer);

  @protected
  LatencyArgs sse_decode_latency_args(SseDeserializer deserializer);

  @protected
  Uint64List sse_decode_list_prim_u_64_strict(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  MemoryConfig sse_decode_memory_config(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_16(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_8(SseDeserializer deserializer);

  @protected
  Uint64List? sse_decode_opt_list_prim_u_64_strict(
      SseDeserializer deserializer);

  @protected
  RunConfig sse_decode_run_config(SseDeserializer deserializer);

  @protected
  SimulationResult sse_decode_simulation_result(SseDeserializer deserializer);

  @protected
  int sse_decode_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_u_64(SseDeserializer deserializer);

  @protected
  U64Array32 sse_decode_u_64_array_32(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  int sse_decode_usize(SseDeserializer deserializer);

  @protected
  XRegisterFile sse_decode_x_register_file(SseDeserializer deserializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_block_replacement(
      BlockReplacement self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_latency_args(
      LatencyArgs self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_x_register_file(
      XRegisterFile self, SseSerializer serializer);

  @protected
  void sse_encode_cache_config(CacheConfig self, SseSerializer serializer);

  @protected
  void sse_encode_cache_options(CacheOptions self, SseSerializer serializer);

  @protected
  void sse_encode_commit_config(CommitConfig self, SseSerializer serializer);

  @protected
  void sse_encode_decode_config(DecodeConfig self, SseSerializer serializer);

  @protected
  void sse_encode_fetch_config(FetchConfig self, SseSerializer serializer);

  @protected
  void sse_encode_functional_unit_group_cfg(
      FunctionalUnitGroupCfg self, SseSerializer serializer);

  @protected
  void sse_encode_functional_unit_pool_config(
      FunctionalUnitPoolConfig self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_issue_config(IssueConfig self, SseSerializer serializer);

  @protected
  void sse_encode_issue_order(IssueOrder self, SseSerializer serializer);

  @protected
  void sse_encode_latency_args(LatencyArgs self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_64_strict(
      Uint64List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_memory_config(MemoryConfig self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_16(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_64(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_8(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_u_64_strict(
      Uint64List? self, SseSerializer serializer);

  @protected
  void sse_encode_run_config(RunConfig self, SseSerializer serializer);

  @protected
  void sse_encode_simulation_result(
      SimulationResult self, SseSerializer serializer);

  @protected
  void sse_encode_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_64_array_32(U64Array32 self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_usize(int self, SseSerializer serializer);

  @protected
  void sse_encode_x_register_file(XRegisterFile self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  RustLibWire.fromExternalLibrary(ExternalLibrary lib);
}

@JS('wasm_bindgen')
external RustLibWasmModule get wasmModule;

@JS()
@anonymous
class RustLibWasmModule implements WasmModule {
  @override
  external Object /* Promise */ call([String? moduleName]);

  @override
  external RustLibWasmModule bind(dynamic thisArg, String moduleName);
}
